ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/adc.c"
  20              		.section	.text.MX_ADC1_Init,"ax",%progbits
  21              		.align	1
  22              		.global	MX_ADC1_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_ADC1_Init:
  28              	.LFB239:
   1:Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/adc.c **** /**
   3:Core/Src/adc.c ****   ******************************************************************************
   4:Core/Src/adc.c ****   * @file    adc.c
   5:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/adc.c ****   *          of the ADC instances.
   7:Core/Src/adc.c ****   ******************************************************************************
   8:Core/Src/adc.c ****   * @attention
   9:Core/Src/adc.c ****   *
  10:Core/Src/adc.c ****   * Copyright (c) 2025 STMicroelectronics.
  11:Core/Src/adc.c ****   * All rights reserved.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/adc.c ****   * in the root directory of this software component.
  15:Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** /* USER CODE END Header */
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  28:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc1;
  29:Core/Src/adc.c **** 
  30:Core/Src/adc.c **** /* ADC1 init function */
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 2


  31:Core/Src/adc.c **** void MX_ADC1_Init(void)
  32:Core/Src/adc.c **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  33:Core/Src/adc.c **** 
  34:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  35:Core/Src/adc.c **** 
  36:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  37:Core/Src/adc.c **** 
  38:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  40              		.loc 1 38 3 view .LVU1
  41              		.loc 1 38 26 is_stmt 0 view .LVU2
  42 0004 0023     		movs	r3, #0
  43 0006 0093     		str	r3, [sp]
  44 0008 0193     		str	r3, [sp, #4]
  45 000a 0293     		str	r3, [sp, #8]
  46 000c 0393     		str	r3, [sp, #12]
  39:Core/Src/adc.c **** 
  40:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  41:Core/Src/adc.c **** 
  42:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  43:Core/Src/adc.c **** 
  44:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  45:Core/Src/adc.c ****   */
  46:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  47              		.loc 1 46 3 is_stmt 1 view .LVU3
  48              		.loc 1 46 18 is_stmt 0 view .LVU4
  49 000e 2148     		ldr	r0, .L11
  50 0010 214A     		ldr	r2, .L11+4
  51 0012 0260     		str	r2, [r0]
  47:Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
  52              		.loc 1 47 3 is_stmt 1 view .LVU5
  53              		.loc 1 47 29 is_stmt 0 view .LVU6
  54 0014 4360     		str	r3, [r0, #4]
  48:Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_10B;
  55              		.loc 1 48 3 is_stmt 1 view .LVU7
  56              		.loc 1 48 25 is_stmt 0 view .LVU8
  57 0016 4FF08072 		mov	r2, #16777216
  58 001a 8260     		str	r2, [r0, #8]
  49:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ENABLE;
  59              		.loc 1 49 3 is_stmt 1 view .LVU9
  60              		.loc 1 49 27 is_stmt 0 view .LVU10
  61 001c 0122     		movs	r2, #1
  62 001e 0261     		str	r2, [r0, #16]
  50:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
  63              		.loc 1 50 3 is_stmt 1 view .LVU11
  64              		.loc 1 50 33 is_stmt 0 view .LVU12
  65 0020 0276     		strb	r2, [r0, #24]
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 3


  51:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  66              		.loc 1 51 3 is_stmt 1 view .LVU13
  67              		.loc 1 51 36 is_stmt 0 view .LVU14
  68 0022 80F82030 		strb	r3, [r0, #32]
  52:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  69              		.loc 1 52 3 is_stmt 1 view .LVU15
  70              		.loc 1 52 35 is_stmt 0 view .LVU16
  71 0026 C362     		str	r3, [r0, #44]
  53:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  72              		.loc 1 53 3 is_stmt 1 view .LVU17
  73              		.loc 1 53 31 is_stmt 0 view .LVU18
  74 0028 1C49     		ldr	r1, .L11+8
  75 002a 8162     		str	r1, [r0, #40]
  54:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  76              		.loc 1 54 3 is_stmt 1 view .LVU19
  77              		.loc 1 54 24 is_stmt 0 view .LVU20
  78 002c C360     		str	r3, [r0, #12]
  55:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 3;
  79              		.loc 1 55 3 is_stmt 1 view .LVU21
  80              		.loc 1 55 30 is_stmt 0 view .LVU22
  81 002e 0323     		movs	r3, #3
  82 0030 C361     		str	r3, [r0, #28]
  56:Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  83              		.loc 1 56 3 is_stmt 1 view .LVU23
  84              		.loc 1 56 36 is_stmt 0 view .LVU24
  85 0032 80F83020 		strb	r2, [r0, #48]
  57:Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  86              		.loc 1 57 3 is_stmt 1 view .LVU25
  87              		.loc 1 57 27 is_stmt 0 view .LVU26
  88 0036 4261     		str	r2, [r0, #20]
  58:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  89              		.loc 1 58 3 is_stmt 1 view .LVU27
  90              		.loc 1 58 7 is_stmt 0 view .LVU28
  91 0038 FFF7FEFF 		bl	HAL_ADC_Init
  92              	.LVL0:
  93              		.loc 1 58 6 view .LVU29
  94 003c F0B9     		cbnz	r0, .L7
  95              	.L2:
  59:Core/Src/adc.c ****   {
  60:Core/Src/adc.c ****     Error_Handler();
  61:Core/Src/adc.c ****   }
  62:Core/Src/adc.c **** 
  63:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  64:Core/Src/adc.c ****   */
  65:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_4;
  96              		.loc 1 65 3 is_stmt 1 view .LVU30
  97              		.loc 1 65 19 is_stmt 0 view .LVU31
  98 003e 0423     		movs	r3, #4
  99 0040 0093     		str	r3, [sp]
  66:Core/Src/adc.c ****   sConfig.Rank = 1;
 100              		.loc 1 66 3 is_stmt 1 view .LVU32
 101              		.loc 1 66 16 is_stmt 0 view .LVU33
 102 0042 0123     		movs	r3, #1
 103 0044 0193     		str	r3, [sp, #4]
  67:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_15CYCLES;
 104              		.loc 1 67 3 is_stmt 1 view .LVU34
 105              		.loc 1 67 24 is_stmt 0 view .LVU35
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 4


 106 0046 0293     		str	r3, [sp, #8]
  68:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 107              		.loc 1 68 3 is_stmt 1 view .LVU36
 108              		.loc 1 68 7 is_stmt 0 view .LVU37
 109 0048 6946     		mov	r1, sp
 110 004a 1248     		ldr	r0, .L11
 111 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 112              	.LVL1:
 113              		.loc 1 68 6 view .LVU38
 114 0050 B8B9     		cbnz	r0, .L8
 115              	.L3:
  69:Core/Src/adc.c ****   {
  70:Core/Src/adc.c ****     Error_Handler();
  71:Core/Src/adc.c ****   }
  72:Core/Src/adc.c **** 
  73:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  74:Core/Src/adc.c ****   */
  75:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_14;
 116              		.loc 1 75 3 is_stmt 1 view .LVU39
 117              		.loc 1 75 19 is_stmt 0 view .LVU40
 118 0052 0E23     		movs	r3, #14
 119 0054 0093     		str	r3, [sp]
  76:Core/Src/adc.c ****   sConfig.Rank = 2;
 120              		.loc 1 76 3 is_stmt 1 view .LVU41
 121              		.loc 1 76 16 is_stmt 0 view .LVU42
 122 0056 0223     		movs	r3, #2
 123 0058 0193     		str	r3, [sp, #4]
  77:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 124              		.loc 1 77 3 is_stmt 1 view .LVU43
 125              		.loc 1 77 7 is_stmt 0 view .LVU44
 126 005a 6946     		mov	r1, sp
 127 005c 0D48     		ldr	r0, .L11
 128 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 129              	.LVL2:
 130              		.loc 1 77 6 view .LVU45
 131 0062 88B9     		cbnz	r0, .L9
 132              	.L4:
  78:Core/Src/adc.c ****   {
  79:Core/Src/adc.c ****     Error_Handler();
  80:Core/Src/adc.c ****   }
  81:Core/Src/adc.c **** 
  82:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  83:Core/Src/adc.c ****   */
  84:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_15;
 133              		.loc 1 84 3 is_stmt 1 view .LVU46
 134              		.loc 1 84 19 is_stmt 0 view .LVU47
 135 0064 0F23     		movs	r3, #15
 136 0066 0093     		str	r3, [sp]
  85:Core/Src/adc.c ****   sConfig.Rank = 3;
 137              		.loc 1 85 3 is_stmt 1 view .LVU48
 138              		.loc 1 85 16 is_stmt 0 view .LVU49
 139 0068 0323     		movs	r3, #3
 140 006a 0193     		str	r3, [sp, #4]
  86:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 141              		.loc 1 86 3 is_stmt 1 view .LVU50
 142              		.loc 1 86 7 is_stmt 0 view .LVU51
 143 006c 6946     		mov	r1, sp
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 5


 144 006e 0948     		ldr	r0, .L11
 145 0070 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 146              	.LVL3:
 147              		.loc 1 86 6 view .LVU52
 148 0074 58B9     		cbnz	r0, .L10
 149              	.L1:
  87:Core/Src/adc.c ****   {
  88:Core/Src/adc.c ****     Error_Handler();
  89:Core/Src/adc.c ****   }
  90:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
  91:Core/Src/adc.c **** 
  92:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
  93:Core/Src/adc.c **** 
  94:Core/Src/adc.c **** }
 150              		.loc 1 94 1 view .LVU53
 151 0076 05B0     		add	sp, sp, #20
 152              	.LCFI2:
 153              		.cfi_remember_state
 154              		.cfi_def_cfa_offset 4
 155              		@ sp needed
 156 0078 5DF804FB 		ldr	pc, [sp], #4
 157              	.L7:
 158              	.LCFI3:
 159              		.cfi_restore_state
  60:Core/Src/adc.c ****   }
 160              		.loc 1 60 5 is_stmt 1 view .LVU54
 161 007c FFF7FEFF 		bl	Error_Handler
 162              	.LVL4:
 163 0080 DDE7     		b	.L2
 164              	.L8:
  70:Core/Src/adc.c ****   }
 165              		.loc 1 70 5 view .LVU55
 166 0082 FFF7FEFF 		bl	Error_Handler
 167              	.LVL5:
 168 0086 E4E7     		b	.L3
 169              	.L9:
  79:Core/Src/adc.c ****   }
 170              		.loc 1 79 5 view .LVU56
 171 0088 FFF7FEFF 		bl	Error_Handler
 172              	.LVL6:
 173 008c EAE7     		b	.L4
 174              	.L10:
  88:Core/Src/adc.c ****   }
 175              		.loc 1 88 5 view .LVU57
 176 008e FFF7FEFF 		bl	Error_Handler
 177              	.LVL7:
 178              		.loc 1 94 1 is_stmt 0 view .LVU58
 179 0092 F0E7     		b	.L1
 180              	.L12:
 181              		.align	2
 182              	.L11:
 183 0094 00000000 		.word	hadc1
 184 0098 00200140 		.word	1073815552
 185 009c 0100000F 		.word	251658241
 186              		.cfi_endproc
 187              	.LFE239:
 189              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 6


 190              		.align	1
 191              		.global	HAL_ADC_MspInit
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	HAL_ADC_MspInit:
 197              	.LVL8:
 198              	.LFB240:
  95:Core/Src/adc.c **** 
  96:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  97:Core/Src/adc.c **** {
 199              		.loc 1 97 1 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 32
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		.loc 1 97 1 is_stmt 0 view .LVU60
 204 0000 70B5     		push	{r4, r5, r6, lr}
 205              	.LCFI4:
 206              		.cfi_def_cfa_offset 16
 207              		.cfi_offset 4, -16
 208              		.cfi_offset 5, -12
 209              		.cfi_offset 6, -8
 210              		.cfi_offset 14, -4
 211 0002 88B0     		sub	sp, sp, #32
 212              	.LCFI5:
 213              		.cfi_def_cfa_offset 48
  98:Core/Src/adc.c **** 
  99:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 214              		.loc 1 99 3 is_stmt 1 view .LVU61
 215              		.loc 1 99 20 is_stmt 0 view .LVU62
 216 0004 0023     		movs	r3, #0
 217 0006 0393     		str	r3, [sp, #12]
 218 0008 0493     		str	r3, [sp, #16]
 219 000a 0593     		str	r3, [sp, #20]
 220 000c 0693     		str	r3, [sp, #24]
 221 000e 0793     		str	r3, [sp, #28]
 100:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 222              		.loc 1 100 3 is_stmt 1 view .LVU63
 223              		.loc 1 100 15 is_stmt 0 view .LVU64
 224 0010 0268     		ldr	r2, [r0]
 225              		.loc 1 100 5 view .LVU65
 226 0012 03F18043 		add	r3, r3, #1073741824
 227 0016 03F59033 		add	r3, r3, #73728
 228 001a 9A42     		cmp	r2, r3
 229 001c 01D0     		beq	.L17
 230              	.LVL9:
 231              	.L13:
 101:Core/Src/adc.c ****   {
 102:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 103:Core/Src/adc.c **** 
 104:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 105:Core/Src/adc.c ****     /* ADC1 clock enable */
 106:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 107:Core/Src/adc.c **** 
 108:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 109:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 110:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 7


 111:Core/Src/adc.c ****     PA4     ------> ADC1_IN4
 112:Core/Src/adc.c ****     PC4     ------> ADC1_IN14
 113:Core/Src/adc.c ****     PC5     ------> ADC1_IN15
 114:Core/Src/adc.c ****     */
 115:Core/Src/adc.c ****     GPIO_InitStruct.Pin = VOLTAGE_Pin;
 116:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 117:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 118:Core/Src/adc.c ****     HAL_GPIO_Init(VOLTAGE_GPIO_Port, &GPIO_InitStruct);
 119:Core/Src/adc.c **** 
 120:Core/Src/adc.c ****     GPIO_InitStruct.Pin = HOLD_FRONT_Pin|HOLD_BACK_Pin;
 121:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 122:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 123:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 124:Core/Src/adc.c **** 
 125:Core/Src/adc.c ****     /* ADC1 DMA Init */
 126:Core/Src/adc.c ****     /* ADC1 Init */
 127:Core/Src/adc.c ****     hdma_adc1.Instance = DMA2_Stream0;
 128:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 129:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 130:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 131:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 132:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 133:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 134:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 135:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 136:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 137:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 138:Core/Src/adc.c ****     {
 139:Core/Src/adc.c ****       Error_Handler();
 140:Core/Src/adc.c ****     }
 141:Core/Src/adc.c **** 
 142:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 143:Core/Src/adc.c **** 
 144:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 145:Core/Src/adc.c **** 
 146:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 147:Core/Src/adc.c ****   }
 148:Core/Src/adc.c **** }
 232              		.loc 1 148 1 view .LVU66
 233 001e 08B0     		add	sp, sp, #32
 234              	.LCFI6:
 235              		.cfi_remember_state
 236              		.cfi_def_cfa_offset 16
 237              		@ sp needed
 238 0020 70BD     		pop	{r4, r5, r6, pc}
 239              	.LVL10:
 240              	.L17:
 241              	.LCFI7:
 242              		.cfi_restore_state
 243              		.loc 1 148 1 view .LVU67
 244 0022 0446     		mov	r4, r0
 106:Core/Src/adc.c **** 
 245              		.loc 1 106 5 is_stmt 1 view .LVU68
 246              	.LBB2:
 106:Core/Src/adc.c **** 
 247              		.loc 1 106 5 view .LVU69
 248 0024 0025     		movs	r5, #0
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 8


 249 0026 0095     		str	r5, [sp]
 106:Core/Src/adc.c **** 
 250              		.loc 1 106 5 view .LVU70
 251 0028 03F58C33 		add	r3, r3, #71680
 252 002c 5A6C     		ldr	r2, [r3, #68]
 253 002e 42F48072 		orr	r2, r2, #256
 254 0032 5A64     		str	r2, [r3, #68]
 106:Core/Src/adc.c **** 
 255              		.loc 1 106 5 view .LVU71
 256 0034 5A6C     		ldr	r2, [r3, #68]
 257 0036 02F48072 		and	r2, r2, #256
 258 003a 0092     		str	r2, [sp]
 106:Core/Src/adc.c **** 
 259              		.loc 1 106 5 view .LVU72
 260 003c 009A     		ldr	r2, [sp]
 261              	.LBE2:
 106:Core/Src/adc.c **** 
 262              		.loc 1 106 5 view .LVU73
 108:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 263              		.loc 1 108 5 view .LVU74
 264              	.LBB3:
 108:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 265              		.loc 1 108 5 view .LVU75
 266 003e 0195     		str	r5, [sp, #4]
 108:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 267              		.loc 1 108 5 view .LVU76
 268 0040 1A6B     		ldr	r2, [r3, #48]
 269 0042 42F00102 		orr	r2, r2, #1
 270 0046 1A63     		str	r2, [r3, #48]
 108:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 271              		.loc 1 108 5 view .LVU77
 272 0048 1A6B     		ldr	r2, [r3, #48]
 273 004a 02F00102 		and	r2, r2, #1
 274 004e 0192     		str	r2, [sp, #4]
 108:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 275              		.loc 1 108 5 view .LVU78
 276 0050 019A     		ldr	r2, [sp, #4]
 277              	.LBE3:
 108:Core/Src/adc.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 278              		.loc 1 108 5 view .LVU79
 109:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 279              		.loc 1 109 5 view .LVU80
 280              	.LBB4:
 109:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 281              		.loc 1 109 5 view .LVU81
 282 0052 0295     		str	r5, [sp, #8]
 109:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 283              		.loc 1 109 5 view .LVU82
 284 0054 1A6B     		ldr	r2, [r3, #48]
 285 0056 42F00402 		orr	r2, r2, #4
 286 005a 1A63     		str	r2, [r3, #48]
 109:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 287              		.loc 1 109 5 view .LVU83
 288 005c 1B6B     		ldr	r3, [r3, #48]
 289 005e 03F00403 		and	r3, r3, #4
 290 0062 0293     		str	r3, [sp, #8]
 109:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 9


 291              		.loc 1 109 5 view .LVU84
 292 0064 029B     		ldr	r3, [sp, #8]
 293              	.LBE4:
 109:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 294              		.loc 1 109 5 view .LVU85
 115:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 295              		.loc 1 115 5 view .LVU86
 115:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 296              		.loc 1 115 25 is_stmt 0 view .LVU87
 297 0066 1023     		movs	r3, #16
 298 0068 0393     		str	r3, [sp, #12]
 116:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 299              		.loc 1 116 5 is_stmt 1 view .LVU88
 116:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 300              		.loc 1 116 26 is_stmt 0 view .LVU89
 301 006a 0326     		movs	r6, #3
 302 006c 0496     		str	r6, [sp, #16]
 117:Core/Src/adc.c ****     HAL_GPIO_Init(VOLTAGE_GPIO_Port, &GPIO_InitStruct);
 303              		.loc 1 117 5 is_stmt 1 view .LVU90
 118:Core/Src/adc.c **** 
 304              		.loc 1 118 5 view .LVU91
 305 006e 03A9     		add	r1, sp, #12
 306 0070 1448     		ldr	r0, .L19
 307              	.LVL11:
 118:Core/Src/adc.c **** 
 308              		.loc 1 118 5 is_stmt 0 view .LVU92
 309 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 310              	.LVL12:
 120:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 311              		.loc 1 120 5 is_stmt 1 view .LVU93
 120:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 312              		.loc 1 120 25 is_stmt 0 view .LVU94
 313 0076 3023     		movs	r3, #48
 314 0078 0393     		str	r3, [sp, #12]
 121:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 315              		.loc 1 121 5 is_stmt 1 view .LVU95
 121:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 316              		.loc 1 121 26 is_stmt 0 view .LVU96
 317 007a 0496     		str	r6, [sp, #16]
 122:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 318              		.loc 1 122 5 is_stmt 1 view .LVU97
 122:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 319              		.loc 1 122 26 is_stmt 0 view .LVU98
 320 007c 0595     		str	r5, [sp, #20]
 123:Core/Src/adc.c **** 
 321              		.loc 1 123 5 is_stmt 1 view .LVU99
 322 007e 03A9     		add	r1, sp, #12
 323 0080 1148     		ldr	r0, .L19+4
 324 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 325              	.LVL13:
 127:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 326              		.loc 1 127 5 view .LVU100
 127:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 327              		.loc 1 127 24 is_stmt 0 view .LVU101
 328 0086 1148     		ldr	r0, .L19+8
 329 0088 114B     		ldr	r3, .L19+12
 330 008a 0360     		str	r3, [r0]
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 10


 128:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 331              		.loc 1 128 5 is_stmt 1 view .LVU102
 128:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 332              		.loc 1 128 28 is_stmt 0 view .LVU103
 333 008c 4560     		str	r5, [r0, #4]
 129:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 334              		.loc 1 129 5 is_stmt 1 view .LVU104
 129:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 335              		.loc 1 129 30 is_stmt 0 view .LVU105
 336 008e 8560     		str	r5, [r0, #8]
 130:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 337              		.loc 1 130 5 is_stmt 1 view .LVU106
 130:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 338              		.loc 1 130 30 is_stmt 0 view .LVU107
 339 0090 C560     		str	r5, [r0, #12]
 131:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 340              		.loc 1 131 5 is_stmt 1 view .LVU108
 131:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 341              		.loc 1 131 27 is_stmt 0 view .LVU109
 342 0092 4FF48063 		mov	r3, #1024
 343 0096 0361     		str	r3, [r0, #16]
 132:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 344              		.loc 1 132 5 is_stmt 1 view .LVU110
 132:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 345              		.loc 1 132 40 is_stmt 0 view .LVU111
 346 0098 4FF40063 		mov	r3, #2048
 347 009c 4361     		str	r3, [r0, #20]
 133:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 348              		.loc 1 133 5 is_stmt 1 view .LVU112
 133:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 349              		.loc 1 133 37 is_stmt 0 view .LVU113
 350 009e 4FF40053 		mov	r3, #8192
 351 00a2 8361     		str	r3, [r0, #24]
 134:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 352              		.loc 1 134 5 is_stmt 1 view .LVU114
 134:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 353              		.loc 1 134 25 is_stmt 0 view .LVU115
 354 00a4 4FF48073 		mov	r3, #256
 355 00a8 C361     		str	r3, [r0, #28]
 135:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 356              		.loc 1 135 5 is_stmt 1 view .LVU116
 135:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 357              		.loc 1 135 29 is_stmt 0 view .LVU117
 358 00aa 0562     		str	r5, [r0, #32]
 136:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 359              		.loc 1 136 5 is_stmt 1 view .LVU118
 136:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 360              		.loc 1 136 29 is_stmt 0 view .LVU119
 361 00ac 4562     		str	r5, [r0, #36]
 137:Core/Src/adc.c ****     {
 362              		.loc 1 137 5 is_stmt 1 view .LVU120
 137:Core/Src/adc.c ****     {
 363              		.loc 1 137 9 is_stmt 0 view .LVU121
 364 00ae FFF7FEFF 		bl	HAL_DMA_Init
 365              	.LVL14:
 137:Core/Src/adc.c ****     {
 366              		.loc 1 137 8 view .LVU122
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 11


 367 00b2 18B9     		cbnz	r0, .L18
 368              	.L15:
 142:Core/Src/adc.c **** 
 369              		.loc 1 142 5 is_stmt 1 view .LVU123
 142:Core/Src/adc.c **** 
 370              		.loc 1 142 5 view .LVU124
 371 00b4 054B     		ldr	r3, .L19+8
 372 00b6 A363     		str	r3, [r4, #56]
 142:Core/Src/adc.c **** 
 373              		.loc 1 142 5 view .LVU125
 374 00b8 9C63     		str	r4, [r3, #56]
 142:Core/Src/adc.c **** 
 375              		.loc 1 142 5 view .LVU126
 376              		.loc 1 148 1 is_stmt 0 view .LVU127
 377 00ba B0E7     		b	.L13
 378              	.L18:
 139:Core/Src/adc.c ****     }
 379              		.loc 1 139 7 is_stmt 1 view .LVU128
 380 00bc FFF7FEFF 		bl	Error_Handler
 381              	.LVL15:
 382 00c0 F8E7     		b	.L15
 383              	.L20:
 384 00c2 00BF     		.align	2
 385              	.L19:
 386 00c4 00000240 		.word	1073872896
 387 00c8 00080240 		.word	1073874944
 388 00cc 00000000 		.word	hdma_adc1
 389 00d0 10640240 		.word	1073898512
 390              		.cfi_endproc
 391              	.LFE240:
 393              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 394              		.align	1
 395              		.global	HAL_ADC_MspDeInit
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	HAL_ADC_MspDeInit:
 401              	.LVL16:
 402              	.LFB241:
 149:Core/Src/adc.c **** 
 150:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 151:Core/Src/adc.c **** {
 403              		.loc 1 151 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 152:Core/Src/adc.c **** 
 153:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 407              		.loc 1 153 3 view .LVU130
 408              		.loc 1 153 15 is_stmt 0 view .LVU131
 409 0000 0268     		ldr	r2, [r0]
 410              		.loc 1 153 5 view .LVU132
 411 0002 0B4B     		ldr	r3, .L28
 412 0004 9A42     		cmp	r2, r3
 413 0006 00D0     		beq	.L27
 414 0008 7047     		bx	lr
 415              	.L27:
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 12


 151:Core/Src/adc.c **** 
 416              		.loc 1 151 1 view .LVU133
 417 000a 10B5     		push	{r4, lr}
 418              	.LCFI8:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
 422 000c 0446     		mov	r4, r0
 154:Core/Src/adc.c ****   {
 155:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 156:Core/Src/adc.c **** 
 157:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 158:Core/Src/adc.c ****     /* Peripheral clock disable */
 159:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 423              		.loc 1 159 5 is_stmt 1 view .LVU134
 424 000e 094A     		ldr	r2, .L28+4
 425 0010 536C     		ldr	r3, [r2, #68]
 426 0012 23F48073 		bic	r3, r3, #256
 427 0016 5364     		str	r3, [r2, #68]
 160:Core/Src/adc.c **** 
 161:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 162:Core/Src/adc.c ****     PA4     ------> ADC1_IN4
 163:Core/Src/adc.c ****     PC4     ------> ADC1_IN14
 164:Core/Src/adc.c ****     PC5     ------> ADC1_IN15
 165:Core/Src/adc.c ****     */
 166:Core/Src/adc.c ****     HAL_GPIO_DeInit(VOLTAGE_GPIO_Port, VOLTAGE_Pin);
 428              		.loc 1 166 5 view .LVU135
 429 0018 1021     		movs	r1, #16
 430 001a 0748     		ldr	r0, .L28+8
 431              	.LVL17:
 432              		.loc 1 166 5 is_stmt 0 view .LVU136
 433 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 434              	.LVL18:
 167:Core/Src/adc.c **** 
 168:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOC, HOLD_FRONT_Pin|HOLD_BACK_Pin);
 435              		.loc 1 168 5 is_stmt 1 view .LVU137
 436 0020 3021     		movs	r1, #48
 437 0022 0648     		ldr	r0, .L28+12
 438 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 439              	.LVL19:
 169:Core/Src/adc.c **** 
 170:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 171:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 440              		.loc 1 171 5 view .LVU138
 441 0028 A06B     		ldr	r0, [r4, #56]
 442 002a FFF7FEFF 		bl	HAL_DMA_DeInit
 443              	.LVL20:
 172:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 173:Core/Src/adc.c **** 
 174:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 175:Core/Src/adc.c ****   }
 176:Core/Src/adc.c **** }
 444              		.loc 1 176 1 is_stmt 0 view .LVU139
 445 002e 10BD     		pop	{r4, pc}
 446              	.LVL21:
 447              	.L29:
 448              		.loc 1 176 1 view .LVU140
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 13


 449              		.align	2
 450              	.L28:
 451 0030 00200140 		.word	1073815552
 452 0034 00380240 		.word	1073887232
 453 0038 00000240 		.word	1073872896
 454 003c 00080240 		.word	1073874944
 455              		.cfi_endproc
 456              	.LFE241:
 458              		.global	hdma_adc1
 459              		.section	.bss.hdma_adc1,"aw",%nobits
 460              		.align	2
 463              	hdma_adc1:
 464 0000 00000000 		.space	96
 464      00000000 
 464      00000000 
 464      00000000 
 464      00000000 
 465              		.global	hadc1
 466              		.section	.bss.hadc1,"aw",%nobits
 467              		.align	2
 470              	hadc1:
 471 0000 00000000 		.space	72
 471      00000000 
 471      00000000 
 471      00000000 
 471      00000000 
 472              		.text
 473              	.Letext0:
 474              		.file 2 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_ty
 475              		.file 3 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 476              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 477              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 478              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 479              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 480              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 481              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 482              		.file 10 "Core/Inc/adc.h"
 483              		.file 11 "Core/Inc/main.h"
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:21     .text.MX_ADC1_Init:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:27     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:183    .text.MX_ADC1_Init:00000094 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:470    .bss.hadc1:00000000 hadc1
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:190    .text.HAL_ADC_MspInit:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:196    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:386    .text.HAL_ADC_MspInit:000000c4 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:463    .bss.hdma_adc1:00000000 hdma_adc1
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:394    .text.HAL_ADC_MspDeInit:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:400    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:451    .text.HAL_ADC_MspDeInit:00000030 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:460    .bss.hdma_adc1:00000000 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccjzr9z1.s:467    .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
